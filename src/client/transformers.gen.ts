// This file is auto-generated by @hey-api/openapi-ts

import type { GetV1OrganizationsResponse, PostV1OrganizationsResponse, DeleteV1OrganizationsByOrganizationSlugResponse, GetV1OrganizationsByOrganizationSlugMembersResponse, PostV1OrganizationsByOrganizationSlugMembersResponse, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponse, GetV1OrganizationsByOrganizationSlugProjectsResponse, PostV1OrganizationsByOrganizationSlugProjectsResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, PostV1SpecificationsResponse, GetV1UsersMeResponse, GetV1UsersByUserIdApiKeysResponse, PostV1UsersByUserIdApiKeysResponse, DeleteV1UsersByUserIdApiKeysByApiKeyIdResponse, PostV1UsersByUserIdApiKeysByApiKeyIdResponse, GetV1UsersByUserIdRolesResponse, GetV1UsersByUserIdWaitlistsResponse, PostV1UsersByUserIdWaitlistsResponse, DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponse } from './types.gen';

const organizationSchemaResponseTransformer = (data: any) => {
    data.created_at = new Date(data.created_at);
    data.updated_at = new Date(data.updated_at);
    return data;
};

export const getV1OrganizationsResponseTransformer = async (data: any): Promise<GetV1OrganizationsResponse> => {
    data.items = data.items.map((item: any) => {
        return organizationSchemaResponseTransformer(item);
    });
    return data;
};

export const postV1OrganizationsResponseTransformer = async (data: any): Promise<PostV1OrganizationsResponse> => {
    data = organizationSchemaResponseTransformer(data);
    return data;
};

export const deleteV1OrganizationsByOrganizationSlugResponseTransformer = async (data: any): Promise<DeleteV1OrganizationsByOrganizationSlugResponse> => {
    data = organizationSchemaResponseTransformer(data);
    return data;
};

const roleSchemaResponseTransformer = (data: any) => {
    data.created_at = new Date(data.created_at);
    data.updated_at = new Date(data.updated_at);
    return data;
};

const userSchemaResponseTransformer = (data: any) => {
    data.created_at = new Date(data.created_at);
    if (data.roles) {
        data.roles = data.roles.map((item: any) => {
            return roleSchemaResponseTransformer(item);
        });
    }
    data.updated_at = new Date(data.updated_at);
    return data;
};

export const getV1OrganizationsByOrganizationSlugMembersResponseTransformer = async (data: any): Promise<GetV1OrganizationsByOrganizationSlugMembersResponse> => {
    data.items = data.items.map((item: any) => {
        return userSchemaResponseTransformer(item);
    });
    return data;
};

export const postV1OrganizationsByOrganizationSlugMembersResponseTransformer = async (data: any): Promise<PostV1OrganizationsByOrganizationSlugMembersResponse> => {
    data.users = data.users.map((item: any) => {
        return userSchemaResponseTransformer(item);
    });
    return data;
};

export const deleteV1OrganizationsByOrganizationSlugMembersByUserIdResponseTransformer = async (data: any): Promise<DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponse> => {
    data = roleSchemaResponseTransformer(data);
    return data;
};

const projectSchemaResponseTransformer = (data: any) => {
    data.created_at = new Date(data.created_at);
    data.updated_at = new Date(data.updated_at);
    return data;
};

export const getV1OrganizationsByOrganizationSlugProjectsResponseTransformer = async (data: any): Promise<GetV1OrganizationsByOrganizationSlugProjectsResponse> => {
    data.items = data.items.map((item: any) => {
        return projectSchemaResponseTransformer(item);
    });
    return data;
};

export const postV1OrganizationsByOrganizationSlugProjectsResponseTransformer = async (data: any): Promise<PostV1OrganizationsByOrganizationSlugProjectsResponse> => {
    data = projectSchemaResponseTransformer(data);
    return data;
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponseTransformer = async (data: any): Promise<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponse> => {
    data = projectSchemaResponseTransformer(data);
    return data;
};

const apiKeyConcealedSchemaResponseTransformer = (data: any) => {
    data.created_at = new Date(data.created_at);
    if (data.last_used_at) {
        data.last_used_at = new Date(data.last_used_at);
    }
    data.updated_at = new Date(data.updated_at);
    return data;
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponseTransformer = async (data: any): Promise<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse> => {
    data.items = data.items.map((item: any) => {
        return apiKeyConcealedSchemaResponseTransformer(item);
    });
    return data;
};

const apiKeySchemaResponseTransformer = (data: any) => {
    data = apiKeyConcealedSchemaResponseTransformer(data);
    return data;
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponseTransformer = async (data: any): Promise<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse> => {
    data = apiKeySchemaResponseTransformer(data);
    return data;
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponseTransformer = async (data: any): Promise<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse> => {
    data = apiKeySchemaResponseTransformer(data);
    return data;
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponseTransformer = async (data: any): Promise<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse> => {
    data = apiKeySchemaResponseTransformer(data);
    return data;
};

const specificationSchemaResponseTransformer = (data: any) => {
    data.created_at = new Date(data.created_at);
    data.updated_at = new Date(data.updated_at);
    return data;
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponseTransformer = async (data: any): Promise<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponse> => {
    data.items = data.items.map((item: any) => {
        return specificationSchemaResponseTransformer(item);
    });
    return data;
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponseTransformer = async (data: any): Promise<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse> => {
    data = specificationSchemaResponseTransformer(data);
    return data;
};

const webhookConcealedSchemaResponseTransformer = (data: any) => {
    data.created_at = new Date(data.created_at);
    data.updated_at = new Date(data.updated_at);
    return data;
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponseTransformer = async (data: any): Promise<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse> => {
    data.items = data.items.map((item: any) => {
        return webhookConcealedSchemaResponseTransformer(item);
    });
    return data;
};

const webhookSchemaResponseTransformer = (data: any) => {
    data = webhookConcealedSchemaResponseTransformer(data);
    return data;
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponseTransformer = async (data: any): Promise<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse> => {
    data = webhookSchemaResponseTransformer(data);
    return data;
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponseTransformer = async (data: any): Promise<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse> => {
    data = apiKeySchemaResponseTransformer(data);
    return data;
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponseTransformer = async (data: any): Promise<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse> => {
    data = webhookConcealedSchemaResponseTransformer(data);
    return data;
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponseTransformer = async (data: any): Promise<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse> => {
    data = webhookSchemaResponseTransformer(data);
    return data;
};

export const postV1SpecificationsResponseTransformer = async (data: any): Promise<PostV1SpecificationsResponse> => {
    data = specificationSchemaResponseTransformer(data);
    return data;
};

export const getV1UsersMeResponseTransformer = async (data: any): Promise<GetV1UsersMeResponse> => {
    data = userSchemaResponseTransformer(data);
    return data;
};

export const getV1UsersByUserIdApiKeysResponseTransformer = async (data: any): Promise<GetV1UsersByUserIdApiKeysResponse> => {
    data.items = data.items.map((item: any) => {
        return apiKeyConcealedSchemaResponseTransformer(item);
    });
    return data;
};

export const postV1UsersByUserIdApiKeysResponseTransformer = async (data: any): Promise<PostV1UsersByUserIdApiKeysResponse> => {
    data = apiKeySchemaResponseTransformer(data);
    return data;
};

export const deleteV1UsersByUserIdApiKeysByApiKeyIdResponseTransformer = async (data: any): Promise<DeleteV1UsersByUserIdApiKeysByApiKeyIdResponse> => {
    data = apiKeySchemaResponseTransformer(data);
    return data;
};

export const postV1UsersByUserIdApiKeysByApiKeyIdResponseTransformer = async (data: any): Promise<PostV1UsersByUserIdApiKeysByApiKeyIdResponse> => {
    data = apiKeySchemaResponseTransformer(data);
    return data;
};

export const getV1UsersByUserIdRolesResponseTransformer = async (data: any): Promise<GetV1UsersByUserIdRolesResponse> => {
    data.items = data.items.map((item: any) => {
        return roleSchemaResponseTransformer(item);
    });
    return data;
};

const waitlistSchemaResponseTransformer = (data: any) => {
    data.created_at = new Date(data.created_at);
    data.updated_at = new Date(data.updated_at);
    return data;
};

export const getV1UsersByUserIdWaitlistsResponseTransformer = async (data: any): Promise<GetV1UsersByUserIdWaitlistsResponse> => {
    data.items = data.items.map((item: any) => {
        return waitlistSchemaResponseTransformer(item);
    });
    return data;
};

export const postV1UsersByUserIdWaitlistsResponseTransformer = async (data: any): Promise<PostV1UsersByUserIdWaitlistsResponse> => {
    data = waitlistSchemaResponseTransformer(data);
    return data;
};

export const deleteV1UsersByUserIdWaitlistsByWaitlistIdResponseTransformer = async (data: any): Promise<DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponse> => {
    data = waitlistSchemaResponseTransformer(data);
    return data;
};