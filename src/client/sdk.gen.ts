// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { GetApiV1WebhooksTypesData, GetApiV1WebhooksTypesResponses, GetApiV1WebhooksTypesErrors, GetApiV1WebhooksData, GetApiV1WebhooksResponses, GetApiV1WebhooksErrors, PostApiV1WebhooksData, PostApiV1WebhooksResponses, PostApiV1WebhooksErrors, DeleteApiV1WebhooksBySubscriptionIdData, DeleteApiV1WebhooksBySubscriptionIdResponses, DeleteApiV1WebhooksBySubscriptionIdErrors, GetApiV1WebhooksBySubscriptionIdData, GetApiV1WebhooksBySubscriptionIdResponses, GetApiV1WebhooksBySubscriptionIdErrors, PatchApiV1WebhooksBySubscriptionIdData, PatchApiV1WebhooksBySubscriptionIdResponses, PatchApiV1WebhooksBySubscriptionIdErrors, PostApiV1WebhooksOrderCreatedData, PostApiV1WebhooksOrderCreatedResponses, PostApiV1WebhooksOrderCancelledData, PostApiV1WebhooksOrderCancelledResponses, PostApiV1WebhooksOrderShippedData, PostApiV1WebhooksOrderShippedResponses, PostApiV1WebhooksOrderReturnedData, PostApiV1WebhooksOrderReturnedResponses, GetApiV1ProductsData, GetApiV1ProductsResponses, GetApiV1ProductsErrors, PostApiV1ProductsData, PostApiV1ProductsResponses, PostApiV1ProductsErrors, PutApiV1ProductsStatusData, PutApiV1ProductsStatusResponses, PutApiV1ProductsStatusErrors, PutApiV1ProductsStocksData, PutApiV1ProductsStocksResponses, PutApiV1ProductsStocksErrors, PutApiV1ProductsPricesData, PutApiV1ProductsPricesResponses, PutApiV1ProductsPricesErrors, GetApiV1CategoriesData, GetApiV1CategoriesResponses, GetApiV1CategoriesErrors, GetApiV1CategoriesByCategoryIdAttributeGroupsData, GetApiV1CategoriesByCategoryIdAttributeGroupsResponses, GetApiV1ResultsProductsData, GetApiV1ResultsProductsResponses, GetApiV1ResultsProductsErrors, GetApiV1ResultsStatusData, GetApiV1ResultsStatusResponses, GetApiV1ResultsStatusErrors, GetApiV1ResultsStocksData, GetApiV1ResultsStocksResponses, GetApiV1ResultsStocksErrors, GetApiV1ResultsPricesData, GetApiV1ResultsPricesResponses, GetApiV1ResultsPricesErrors, GetApiV1ResultsCancelOrdersData, GetApiV1ResultsCancelOrdersResponses, GetApiV1ResultsCancelOrdersErrors, GetApiV1ResultsReturnOrdersData, GetApiV1ResultsReturnOrdersResponses, GetApiV1ResultsReturnOrdersErrors, GetApiV1ResultsShipOrdersData, GetApiV1ResultsShipOrdersResponses, GetApiV1ResultsShipOrdersErrors, GetApiV1OrdersData, GetApiV1OrdersResponses, GetApiV1OrdersErrors, GetApiV1OrdersByOrderNumberDeliveryDocumentData, GetApiV1OrdersByOrderNumberDeliveryDocumentErrors, PostApiV1OrdersCancelData, PostApiV1OrdersCancelResponses, PostApiV1OrdersCancelErrors, PostApiV1OrdersShipData, PostApiV1OrdersShipResponses, PostApiV1OrdersShipErrors, PostApiV1OrdersReturnData, PostApiV1OrdersReturnResponses, PostApiV1OrdersReturnErrors, GetApiV1ReportsData, GetApiV1ReportsResponses, GetApiV1ReportsErrors, GetApiV1ReportsByReportIdDownloadData, GetApiV1ReportsByReportIdDownloadErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Webhook Event Types
 */
export const getApiV1WebhooksTypes = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1WebhooksTypesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1WebhooksTypesResponses, GetApiV1WebhooksTypesErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/types',
        ...options
    });
};

/**
 * Get Webhook Subscriptions
 */
export const getApiV1Webhooks = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1WebhooksData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1WebhooksResponses, GetApiV1WebhooksErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/',
        ...options
    });
};

/**
 * Post Webhook Subscription
 */
export const postApiV1Webhooks = <ThrowOnError extends boolean = false>(options: Options<PostApiV1WebhooksData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1WebhooksResponses, PostApiV1WebhooksErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Webhook Subscription
 */
export const deleteApiV1WebhooksBySubscriptionId = <ThrowOnError extends boolean = false>(options: Options<DeleteApiV1WebhooksBySubscriptionIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiV1WebhooksBySubscriptionIdResponses, DeleteApiV1WebhooksBySubscriptionIdErrors, ThrowOnError>({
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/{subscription_id}',
        ...options
    });
};

/**
 * Get Webhook Subscription
 */
export const getApiV1WebhooksBySubscriptionId = <ThrowOnError extends boolean = false>(options: Options<GetApiV1WebhooksBySubscriptionIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1WebhooksBySubscriptionIdResponses, GetApiV1WebhooksBySubscriptionIdErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/{subscription_id}',
        ...options
    });
};

/**
 * Update Webhook Subscription Patch
 */
export const patchApiV1WebhooksBySubscriptionId = <ThrowOnError extends boolean = false>(options: Options<PatchApiV1WebhooksBySubscriptionIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchApiV1WebhooksBySubscriptionIdResponses, PatchApiV1WebhooksBySubscriptionIdErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/{subscription_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Order Created Webhook
 * This is a dummy endpoint that demonstrates the webhook payload structure that will be sent
 * to webhook subscribers when an order.created event occurs.
 *
 * The actual webhooks will be sent asynchronously to the URLs specified in the webhook subscriptions
 * that are subscribed to the order.created event type.
 *
 * The webhook payload includes:
 * - id: ID of the webhook message
 * - event: The event type (order.created)
 * - timestamp: When the event occurred
 * - subscription_id: ID of the webhook subscription
 * - message: The order data in the same format as the GET /orders/{id} endpoint
 */
export const postApiV1WebhooksOrderCreated = <ThrowOnError extends boolean = false>(options: Options<PostApiV1WebhooksOrderCreatedData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1WebhooksOrderCreatedResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/order-created',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Order Cancelled Webhook
 * This is a dummy endpoint that demonstrates the webhook payload structure that will be sent
 * to webhook subscribers when an order.cancelled event occurs.
 *
 * The actual webhooks will be sent asynchronously to the URLs specified in the webhook subscriptions
 * that are subscribed to the order.cancelled event type.
 *
 * The webhook payload includes:
 * - id: ID of the webhook message
 * - event: The event type (order.cancelled)
 * - timestamp: When the event occurred
 * - subscription_id: ID of the webhook subscription
 * - message: The order data in the same format as the GET /orders/{id} endpoint
 */
export const postApiV1WebhooksOrderCancelled = <ThrowOnError extends boolean = false>(options: Options<PostApiV1WebhooksOrderCancelledData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1WebhooksOrderCancelledResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/order-cancelled',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Order Shipped Webhook
 * This is a dummy endpoint that demonstrates the webhook payload structure that will be sent
 * to webhook subscribers when an order.shipped event occurs.
 *
 * The actual webhooks will be sent asynchronously to the URLs specified in the webhook subscriptions
 * that are subscribed to the order.shipped event type.
 *
 * The webhook payload includes:
 * - id: ID of the webhook message
 * - event: The event type (order.shipped)
 * - timestamp: When the event occurred
 * - subscription_id: ID of the webhook subscription
 * - message: The order data in the same format as the GET /orders/{id} endpoint
 */
export const postApiV1WebhooksOrderShipped = <ThrowOnError extends boolean = false>(options: Options<PostApiV1WebhooksOrderShippedData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1WebhooksOrderShippedResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/order-shipped',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Order Returned Webhook
 * This is a dummy endpoint that demonstrates the webhook payload structure that will be sent
 * to webhook subscribers when an order.returned event occurs.
 *
 * The actual webhooks will be sent asynchronously to the URLs specified in the webhook subscriptions
 * that are subscribed to the order.returned event type.
 *
 * The webhook payload includes:
 * - id: ID of the webhook message
 * - event: The event type (order.returned)
 * - timestamp: When the event occurred
 * - subscription_id: ID of the webhook subscription
 * - message: The order data in the same format as the GET /orders/{id} endpoint
 */
export const postApiV1WebhooksOrderReturned = <ThrowOnError extends boolean = false>(options: Options<PostApiV1WebhooksOrderReturnedData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1WebhooksOrderReturnedResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/webhooks/order-returned',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Products
 */
export const getApiV1Products = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1ProductsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1ProductsResponses, GetApiV1ProductsErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/products/',
        ...options
    });
};

/**
 * Upsert Product
 */
export const postApiV1Products = <ThrowOnError extends boolean = false>(options: Options<PostApiV1ProductsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1ProductsResponses, PostApiV1ProductsErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/products/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update Product Status
 */
export const putApiV1ProductsStatus = <ThrowOnError extends boolean = false>(options: Options<PutApiV1ProductsStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiV1ProductsStatusResponses, PutApiV1ProductsStatusErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/products/status',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update Stock
 */
export const putApiV1ProductsStocks = <ThrowOnError extends boolean = false>(options: Options<PutApiV1ProductsStocksData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiV1ProductsStocksResponses, PutApiV1ProductsStocksErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/products/stocks',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update Price
 */
export const putApiV1ProductsPrices = <ThrowOnError extends boolean = false>(options: Options<PutApiV1ProductsPricesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiV1ProductsPricesResponses, PutApiV1ProductsPricesErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/products/prices',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * List Categories
 */
export const getApiV1Categories = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1CategoriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1CategoriesResponses, GetApiV1CategoriesErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/categories/',
        ...options
    });
};

/**
 * List Attribute Groups
 */
export const getApiV1CategoriesByCategoryIdAttributeGroups = <ThrowOnError extends boolean = false>(options: Options<GetApiV1CategoriesByCategoryIdAttributeGroupsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1CategoriesByCategoryIdAttributeGroupsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/categories/{category_id}/attribute-groups',
        ...options
    });
};

/**
 * Get Product Batch Results
 */
export const getApiV1ResultsProducts = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ResultsProductsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ResultsProductsResponses, GetApiV1ResultsProductsErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/results/products',
        ...options
    });
};

/**
 * Get Product Status Update Batch Results
 */
export const getApiV1ResultsStatus = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ResultsStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ResultsStatusResponses, GetApiV1ResultsStatusErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/results/status',
        ...options
    });
};

/**
 * Get Stock Batch Results
 */
export const getApiV1ResultsStocks = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ResultsStocksData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ResultsStocksResponses, GetApiV1ResultsStocksErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/results/stocks',
        ...options
    });
};

/**
 * Get Price Batch Results
 */
export const getApiV1ResultsPrices = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ResultsPricesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ResultsPricesResponses, GetApiV1ResultsPricesErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/results/prices',
        ...options
    });
};

/**
 * Get Cancel Order Batch Results
 */
export const getApiV1ResultsCancelOrders = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ResultsCancelOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ResultsCancelOrdersResponses, GetApiV1ResultsCancelOrdersErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/results/cancel-orders',
        ...options
    });
};

/**
 * Get Return Order Batch Results
 */
export const getApiV1ResultsReturnOrders = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ResultsReturnOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ResultsReturnOrdersResponses, GetApiV1ResultsReturnOrdersErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/results/return-orders',
        ...options
    });
};

/**
 * Get Ship Order Batch Results
 */
export const getApiV1ResultsShipOrders = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ResultsShipOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ResultsShipOrdersResponses, GetApiV1ResultsShipOrdersErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/results/ship-orders',
        ...options
    });
};

/**
 * Get Orders
 */
export const getApiV1Orders = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1OrdersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1OrdersResponses, GetApiV1OrdersErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/orders/',
        ...options
    });
};

/**
 * Get Delivery Document
 */
export const getApiV1OrdersByOrderNumberDeliveryDocument = <ThrowOnError extends boolean = false>(options: Options<GetApiV1OrdersByOrderNumberDeliveryDocumentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, GetApiV1OrdersByOrderNumberDeliveryDocumentErrors, ThrowOnError>({
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/orders/{order_number}/delivery_document',
        ...options
    });
};

/**
 * Cancel Order Items
 */
export const postApiV1OrdersCancel = <ThrowOnError extends boolean = false>(options: Options<PostApiV1OrdersCancelData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1OrdersCancelResponses, PostApiV1OrdersCancelErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/orders/cancel',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Ship Order Items
 */
export const postApiV1OrdersShip = <ThrowOnError extends boolean = false>(options: Options<PostApiV1OrdersShipData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1OrdersShipResponses, PostApiV1OrdersShipErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/orders/ship',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Return Order Items
 */
export const postApiV1OrdersReturn = <ThrowOnError extends boolean = false>(options: Options<PostApiV1OrdersReturnData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV1OrdersReturnResponses, PostApiV1OrdersReturnErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/orders/return',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * List Reports
 */
export const getApiV1Reports = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1ReportsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1ReportsResponses, GetApiV1ReportsErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/reports/',
        ...options
    });
};

/**
 * Download Report
 */
export const getApiV1ReportsByReportIdDownload = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ReportsByReportIdDownloadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, GetApiV1ReportsByReportIdDownloadErrors, ThrowOnError>({
        security: [
            {
                name: 'X-API-Key',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/reports/{report_id}/download',
        ...options
    });
};